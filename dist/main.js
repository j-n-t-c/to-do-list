(()=>{"use strict";const e={init:function(){this.serializer(),void 0!==localStorage.tasks?(this.setTaskArray(),this.setProjectArray()):(this.taskArray=[],this.projectArray=[])},serializer:function(){Storage.prototype.setObj=function(e,t){return this.setItem(e,JSON.stringify(t))},Storage.prototype.getObj=function(e){return JSON.parse(this.getItem(e))}},setTaskStorage:function(){localStorage.setObj("tasks",a.array)},setProjectStorage:function(){localStorage.setObj("projects",t.array)},setTaskArray:function(){this.taskArray=localStorage.getObj("tasks")},setProjectArray:function(){this.projectArray=localStorage.getObj("projects")},clear:function(){window.localStorage.clear(),this.taskArray=[],this.projectArray=[]}},t={init:function(){this.array=[],this.createProjectsArray(),this.objArray=[],void 0!==localStorage.projects?this.array=e.projectArray:(this.pushProject("my tasks"),this.pushProject("test"),e.setProjectStorage(),e.setProjectArray())},createProjectsArray:function(){Array.from(document.querySelectorAll(".project-title")).forEach((e=>{this.array.push(e.getAttribute("data-name"))}))},createObjArray:function(){this.array.forEach((e=>{this.objArray.push({name:e,hide:!1})}))},submitAndUpdate:function(){var t=c.newProject.value;this.nameCheck(t)?alert(`A project named ${t} already exists, please rename new project.`):(c.projectTemplate(t),this.pushProject(t),e.setProjectStorage(),e.setProjectArray(),c.updateProjectSelect(),c.cacheDom(),this.checkEmpties())},checkEmpties:function(){e.projectArray.forEach((e=>{this.taskInProject(e)||this.hasEmptyMsg(e)||(console.log("true"),c.emptyTemplate(e))}))},loadProjects:function(){e.projectArray.forEach((e=>{c.projectTemplate(e)})),this.checkEmpties(),this.createObjArray()},taskInProject:function(t){return e.taskArray.some((e=>e.project==t))},hasEmptyMsg:function(e){console.log(e);var t=document.getElementById("project-"+e).nextElementSibling;return console.log(t),t.id.includes("empty")},nameCheck:function(t){return e.projectArray.some((e=>e==t))},pushProject:function(e){this.array.push(e)},matchProjects:function(t){e.projectArray.forEach((r=>{t=="project-"+r&&(alert(`This will delete your project '${r}' and all associated tasks. Press ok to confirm.`),a.removeTasksInProject(r),e.projectArray.splice(e.projectArray.indexOf(r),1),c.removeElementById(t),this.array=e.projectArray,e.setProjectStorage(),c.updateProjectSelect(),c.cacheDom(),this.checkEmpties())}))}};var r={init:function(){this.array=[],e.init(),this.hideCompleted=!1,void 0!==localStorage.tasks?this.array=e.taskArray:(this.pushTask(this.createTask({title:"create a new task",notes:"this is the first thing on your list!",dueDate:"March 1",project:"my tasks"})),this.pushTask(this.createTask({title:"test",description:"test",project:"test"})),e.setTaskStorage(),e.setTaskArray())},getObject:function(){return{title:c.title.value,dueDate:c.dueDate.value,priority:c.priority.value,notes:c.notes.value,project:c.projectSelect.value}},createTask:function({title:e,description:t,dueDate:r,priority:a,notes:o,project:c}){return{title:e,description:t,dueDate:r,priority:a,notes:o,project:c,counter:this.array.length+1,completed:!1}},titleCheck:function(t){return e.taskArray.some((e=>e.title==t.title&&e.project==t.project))},pushTask:function(e){this.array.push(e)},markComplete:function(e){e.completed=!0},submitAndUpdate:function(){var r=this.createTask(this.getObject());this.titleCheck(r)?alert(`A task with this title already exists under project ${r.project}.`):(this.pushTask(r),this.clear(c.projectDisplay),e.setTaskStorage(),e.setTaskArray(),this.loadTasks(),c.cacheDom(),t.checkEmpties())},matchTasks:function(r){e.taskArray.forEach((a=>{r==a.title+" "+a.project&&(e.taskArray.splice(e.taskArray.indexOf(a),1),this.clear(c.projectDisplay),this.array=e.taskArray,e.setTaskStorage(),this.loadTasks(),c.cacheDom(),t.checkEmpties())}))},clear:function(e){e.querySelectorAll("div.task-wrapper, div.completed-task-wrapper, div.empty-task-wrapper").forEach((e=>{e.remove()}))},loadTasks:function(){e.taskArray.forEach((e=>{var t=e.project;0==e.completed?c.taskTemplate(t,e):0==this.hideCompleted&&c.completedTemplate(t,e)}))},removeTasksInProject:function(t){e.taskArray.forEach((a=>{a.project==t&&e.taskArray.splice(e.taskArray.indexOf(a),1),r.array=e.taskArray,e.setTaskStorage()}))}};const a=r;var o={cacheDom:function(){this.projectDisplay=document.getElementById("project-display"),this.newProjectWrapper=document.getElementById("new-project-wrapper"),this.newTaskWrapper=document.getElementById("new-task-wrapper"),this.submitButton=document.getElementById("submit"),this.submitNewProject=document.getElementById("submit-new-button"),this.projectPopup=document.getElementById("project-popup"),this.closeProjectPopup=document.getElementById("close-new-project-popup"),this.taskPopup=document.getElementById("task-popup"),this.closeTaskPopup=document.getElementById("close-new-task-popup"),this.projectSelect=document.getElementById("input-project"),this.title=document.getElementById("input-title"),this.description=document.getElementById("input-description"),this.dueDate=document.getElementById("input-duedate"),this.priority=document.getElementById("input-priority"),this.notes=document.getElementById("input-notes"),this.newProject=document.getElementById("input-new-project")},addListeners:function(){this.submitNewProject.addEventListener("click",(function(){t.submitAndUpdate(),o.newProjectWrapper.style.display="none"})),this.submitButton.addEventListener("click",(function(){a.submitAndUpdate()})),this.projectPopup.addEventListener("click",(function(){console.log("clicked"),o.newProjectWrapper.style.display="block"})),this.closeProjectPopup.addEventListener("click",(function(){o.newProjectWrapper.style.display="none"})),this.taskPopup.addEventListener("click",(function(){console.log("clicked"),o.newTaskWrapper.style.display="block"})),this.closeTaskPopup.addEventListener("click",(function(){o.newTaskWrapper.style.display="none"}))},projectSelectTemplate:function(e){o.projectSelect.insertAdjacentHTML("beforeend",`<option value="${e}">${e}</option>`)},updateProjectSelect:function(){o.projectSelect.replaceChildren(),e.projectArray.forEach((e=>{this.projectSelectTemplate(e)}))},projectTemplate:function(e){o.projectDisplay.insertAdjacentHTML("beforeend",`\n        <div class="project-wrapper" id="project-${e}-wrappers">\n            <div class="project-header project-${e}" id="project-${e}" data-name="${e}">\n                <button class="delete-project-button" id="${e}-delete"><span>x</span></button>\n                <h3>${e}</h3>\n                <button class="hide-completed-button" id="${e}-hide">hide completed</button>\n            </div>\n            <div class="opentasks-header" id="project-${e}-opentasks"></div>\n            <div class="completed-header" id="project-${e}-completed"></div>\n        </div>\n        `);var r=document.getElementById(e+"-delete");r.addEventListener("click",(function(){t.matchProjects(r.parentElement.id)})),document.getElementById(e+"-hide").addEventListener("click",(function(){o.hideCmpInProj(e),console.log("click")}))},taskTemplate:function(r,c){document.getElementById(`project-${r}-opentasks`).insertAdjacentHTML("beforeend",`\n        <div class="task-wrapper" id="${c.title+" "+r}">\n            <button class="delete-task-button" id="${c.title}-task-delete"><span>x</span></button>\n            <button class="collapse-task-button" id="${c.title}-task-collapse"><span><</span></button>\n            <div class="task-title">${c.title}</div>\n            <div class="task-notes">${c.notes}</div>\n            <div class="task-duedate">${c.dueDate}</div>\n            <div class="task-priority">${c.priority}</div>\n            <input type="checkbox" class="taskcheck" id="${c.title+" "+c.project}-check" data-forcheck="${c.title+" "+c.project}" name="completed">\n            <label for="completed">completed</label><br>\n        </div>\n        `);var s=document.getElementById(c.title+"-task-delete");s.addEventListener("click",(function(){console.log("click"),a.matchTasks(s.parentElement.id)})),document.getElementById(c.title+"-task-collapse").addEventListener("click",(function(){console.log(this.parentElement.getElementsByClassName("task-title"))})),document.getElementById(c.title+" "+c.project+"-check").addEventListener("change",(function(){e.taskArray.forEach((e=>{this.getAttribute("data-forcheck")==e.title+" "+e.project&&(e.completed=!0)})),a.array=e.taskArray,a.clear(o.projectDisplay),a.loadTasks(),1==t.objArray.find((e=>e.name=r)).hide&&o.hideCmpInProj(r)}))},completedTemplate:function(t,r){document.getElementById(`project-${t}-completed`).insertAdjacentHTML("beforeend",`\n        <div class="completed-task-wrapper" id="${r.title+" "+t}" data-project="${t}">\n            <button class="delete-task-button" id="${r.title}-task-delete"><span>x</span></button>\n            <div class="task-counter">${r.counter}</div>\n            <div class="task-title">${r.title}</div>\n            <div class="task-description">${r.description}</div>\n            <div class="task-duedate">${r.dueDate}</div>\n            <div class="task-priority">${r.priority}</div>\n            <div class="task-notes">${r.notes}</div>\n            <input type="checkbox" class="taskcheck" id="${r.title+" "+r.project}-check" data-forcheck="${r.title+" "+r.project}" name="completed" checked>\n            <label for="completed">completed</label><br>\n        </div>\n        `);var c=document.getElementById(r.title+"-task-delete");c.addEventListener("click",(function(){a.matchTasks(c.parentElement.id)})),document.getElementById(r.title+" "+r.project+"-check").addEventListener("change",(function(){a.array=e.taskArray,e.taskArray.forEach((e=>{this.getAttribute("data-forcheck")==e.title+" "+e.project&&(e.completed=!1)})),a.array=e.taskArray,a.clear(o.projectDisplay),a.loadTasks()}))},hideCmpInProj:function(r){var a=t.objArray.find((e=>e.name=r)),c=e.taskArray.filter((e=>e.project==r&&1==e.completed));console.log(a),c.forEach((e=>{console.log(a.hide);var t=document.getElementById(e.title+" "+e.project),r=document.getElementById(e.project+"-hide");document.contains(t)?(t.remove(),r.innerText="show completed"):document.contains(t)||(o.completedTemplate(e.project,e),r.innerText="hide completed")})),0==a.hide?a.hide=!0:1==a.hide&&(a.hide=!1)},emptyTemplate:function(e){document.getElementById("project-"+e).insertAdjacentHTML("afterend",`<div class="empty-task-wrapper" id="empty + " " + ${e}">\n            <div>no tasks found for this project</div>\n        </div>`)},removeElementById:function(e){console.log(e);var t=document.getElementById(e);console.log(t.parentElement),t.parentElement.remove()}};const c=o;c.cacheDom(),a.init(),t.init(),t.loadProjects(),a.loadTasks(),c.addListeners(),c.updateProjectSelect(),c.cacheDom()})();